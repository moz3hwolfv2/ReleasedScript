local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local StarterGui = game:GetService("StarterGui")
local LocalPlayer = Players.LocalPlayer

-- Notify Loading
StarterGui:SetCore("SendNotification", {
    Title = "Loading",
    Text = "Wait 1 - 20 seconds to load GUI",
    Duration = 14
})

task.wait(math.random(1, 20))

-- ui 
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.Name = "ChatSpyUI"

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 300)
frame.Position = UDim2.new(0.7, 0, 0.1, 0)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 2
frame.BorderColor3 = Color3.fromRGB(0, 0, 0) -- Black outline
frame.Active = true
frame.Draggable = true
frame.Parent = gui

-- name
local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, -60, 0, 28)
title.Position = UDim2.new(0, 8, 0, 0)
title.Text = "ChatSpy"
title.BackgroundTransparency = 1
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20
title.TextColor3 = Color3.new(1, 1, 1)
title.TextXAlignment = Enum.TextXAlignment.Left

-- minimize
local btnMin = Instance.new("TextButton", frame)
btnMin.Size = UDim2.new(0, 25, 0, 25)
btnMin.Position = UDim2.new(1, -30, 0, 2)
btnMin.Text = "-"
btnMin.Font = Enum.Font.SourceSansBold
btnMin.TextSize = 20
btnMin.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
btnMin.TextColor3 = Color3.new(1, 1, 1)

-- scroll
local logs = {}
do
    local scroll = Instance.new("ScrollingFrame", frame)
    scroll.Name = "PublicLog"
    scroll.Position = UDim2.new(0, 0, 0, 55)
    scroll.Size = UDim2.new(1, 0, 1, -90)
    scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
    scroll.ScrollBarThickness = 6
    scroll.BackgroundColor3 = Color3.fromRGB(30, 30, 30)

    local layout = Instance.new("UIListLayout", scroll)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Padding = UDim.new(0, 4)

    logs.Public = scroll
    logs.Layout = layout
end

-- clear button
local btnClear = Instance.new("TextButton", frame)
btnClear.Size = UDim2.new(0, 70, 0, 22)
btnClear.Position = UDim2.new(1, -80, 1, -28)
btnClear.Text = "Clear Txt"
btnClear.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
btnClear.TextColor3 = Color3.new(1, 1, 1)
btnClear.Font = Enum.Font.SourceSans
btnClear.TextSize = 14

-- filter button
local btnFilter = Instance.new("TextButton", frame)
btnFilter.Size = UDim2.new(0, 70, 0, 22)
btnFilter.Position = UDim2.new(1, -160, 1, -28)
btnFilter.Text = "Filter: Off"
btnFilter.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
btnFilter.TextColor3 = Color3.new(1, 1, 1)
btnFilter.Font = Enum.Font.SourceSans
btnFilter.TextSize = 14

local filteringOn = false
btnFilter.MouseButton1Click:Connect(function()
    filteringOn = not filteringOn
    btnFilter.Text = filteringOn and "Filter: On" or "Filter: Off"
end)

-- minimize animation 
local minimized = false
btnMin.MouseButton1Click:Connect(function()
    minimized = not minimized
    local goalSize = minimized and UDim2.new(0, 300, 0, 30) or UDim2.new(0, 300, 0, 300)
    local tween = TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = goalSize})
    tween:Play()

    for _, child in pairs(frame:GetChildren()) do
        if child ~= title and child ~= btnMin then
            child.Visible = not minimized
        end
    end

    btnMin.Text = minimized and "+" or "-"
end)

local badWords = {
    "",
}

local function filterMessage(message)
    for _, badWord in ipairs(badWords) do
        if string.find(string.lower(message), badWord) then
            return "[Filtered]"
        end
    end
    return message
end

-- logging message
local function logMessage(from, msg, to)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 20)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.SourceSans
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left

    if filteringOn then
        msg = filterMessage(msg)
    end

    local fromTag = "[" .. from.Name .. (from == LocalPlayer and " (You)" or "") .. "]"
    local spyTag = (to and from ~= LocalPlayer) and " {Spy}" or ""
    local toTag = to and ("  [" .. to.Name .. "]") or ""

    label.Text = fromTag .. spyTag .. toTag .. ": " .. msg
    label.TextColor3 = Color3.new(1, 1, 1)
    label.Parent = logs.Public

    logs.Public.CanvasSize = UDim2.new(0, 0, 0, logs.Layout.AbsoluteContentSize.Y + 10)
end

-- player logg
local function hookPlayer(player)
    player.Chatted:Connect(function(msg)
        local _, targetName, message = msg:match("^/(w|whisper) (%w+)%s(.+)")
        if targetName and message then
            local target = Players:FindFirstChild(targetName)
            if target then
                logMessage(player, message, target)
                if target == LocalPlayer then
                    logMessage(target, message, player)
                end
            end
        else
            logMessage(player, msg)
        end
    end)
end

for _, player in ipairs(Players:GetPlayers()) do
    hookPlayer(player)
end

Players.PlayerAdded:Connect(hookPlayer)

-- Clear Logs
btnClear.MouseButton1Click:Connect(function()
    for _, child in ipairs(logs.Public:GetChildren()) do
        if child:IsA("TextLabel") then
            child:Destroy()
        end
    end
    logs.Public.CanvasSize = UDim2.new(0, 0, 0, 0)
end)

-- Notify Loaded
StarterGui:SetCore("SendNotification", {
    Title = "ChatSpy GUI is loaded",
    Text = "Join our discord server",
    Duration = 8
})

wait(7)
local url = "https://discord.gg/ewf5kwCZCT"
setclipboard(url)

wait(2)
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Discord link",
    Text = "The URL has been copied to your clipboard!",
    Duration = 5
})